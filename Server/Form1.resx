<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="notifyIcon1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>